# X1<-numeric(1000)
# X2<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
W<-rnorm(1000)
X<-numeric(1000)
# X1<-numeric(1000)
# X2<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 5:1000)
X1[t]<-X[t-1]
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
# X2<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
# for(t in 3:1000)
#   X2[t]<-X[t-2]
ts.plot(X)
mean(X) #Media del proceso
cov(X,X) #gama 0
cov(X,X1) #gama 1
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
# X2<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
# for(t in 3:1000)
#   X2[t]<-X[t-2]
ts.plot(X)
mean(X) #Media del proceso
cov(X,X) #gama 0
cov(X,X1) #gama 1
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
ts.plot(X)
mean(X) #Media del proceso
cov(X,X) #gama 0
cov(X,X1) #gama 1
cov(X,X2) #gama 2
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
mean(X) #Media del proceso
cov(X,X) #gama 0
cov(X,X1) #gama 1
cov(X,X2) #gama 2
cov(X,X3) #gama 2
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
mean(X) #Media del proceso
cov(X,X) #gama 0
cov(X,X1) #gama 1
cov(X,X2) #gama 2
cov(X,X3) #gama 2
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
#El valor esperado es de cero
mean(X) #Media del proceso
cov(X,X) #gama 0
cov(X,X1) #gama 1
cov(X,X2) #gama 2
cov(X,X3) #gama 2
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
#El valor esperado es de cero
mean(X) #Media del proceso
#Gama algebráico
g[0]<-10
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
#El valor esperado es de cero
mean(X) #Media del proceso
#Gama algebráico
g<-numeric[3]
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 4:1000)
X[t]<-3*W[t-3]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
#El valor esperado es de cero
mean(X) #Media del proceso
#Gama algebráico
#Gama 0=10
cov(X,X) #gama 0
cov(X,X1) #gama 1
cov(X,X2) #gama 2
cov(X,X3) #gama 2
for(t in 1:1000)
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 1:1000)
X[t]<--1/2*W[t-1]+W[t]
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 2:1000)
X[t]<--1/2*W[t-1]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
#El valor esperado es de cero
mean(X) #Media del proceso
#Gama algebráico
#Gama0 = 10
#Gama1 = 0
#Gama2 = 0
#Gama 3 = 3
cov(X,X) #gama 0
cov(X,X1) #gama 1
cov(X,X2) #gama 2
cov(X,X3) #gama 3
#El proceso es MA(3)
#Al ser MA, es un proceso estacionario
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 2:1000)
X[t]<--1/2*W[t-1]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
#El valor esperado es de
mean(X) #Media del proceso
#Gama algebráico
#Gama0 =
#Gama1 =
#Gama2 =
#Gama 3 =
cov(X,X) #gama 0
cov(X,X1) #gama 1
cov(X,X2) #gama 2
cov(X,X3) #gama 3
#El proceso es
#
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 2:1000)
X[t]<-3*W[t-2]+1/3*W[t-1]+W[t]
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 3:1000)
X[t]<-3*W[t-2]+1/3*W[t-1]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
#El valor esperado es de cero
mean(X) #Media del proceso
#Gama algebráico
#Gama0 = 5/4
#Gama1 = -1/2
#Gama2 = 0
#Gama 3 = 0
cov(X,X) #gama 0
cov(X,X1) #gama 1
cov(X,X2) #gama 2
cov(X,X3) #gama 3
#El proceso es MA(1)
#Al ser MA, es un proceso estacionario
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 3:1000)
X[t]<-3*W[t-2]+1/3*W[t-1]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
#El valor esperado es de cero
mean(X) #Media del proceso
#Gama algebráico
#Gama0 = 10.11
#Gama1 = 4/3
#Gama2 =
#Gama 3 =
cov(X,X) #gama 0
cov(X,X1) #gama 1
cov(X,X2) #gama 2
cov(X,X3) #gama 3
#El proceso es MA(2)
#Al ser MA, es un proceso estacionario
W<-rnorm(1000)
X<-numeric(1000)
X1<-numeric(1000)
X2<-numeric(1000)
X3<-numeric(1000)
for(t in 3:1000)
X[t]<-3*W[t-2]+1/3*W[t-1]+W[t]
for(t in 2:1000)
X1[t]<-X[t-1]
for(t in 3:1000)
X2[t]<-X[t-2]
for(t in 4:1000)
X3[t]<-X[t-3]
ts.plot(X)
#El valor esperado es de cero
mean(X) #Media del proceso
#Gama algebráico
#Gama0 = 10.11
#Gama1 = 4/3
#Gama2 =
#Gama 3 =
cov(X,X) #gama 0
cov(X,X1) #gama 1
cov(X,X2) #gama 2
cov(X,X3) #gama 3
#El proceso es MA(2)
#Al ser MA, es un proceso estacionario
knitr::opts_chunk$set(echo = TRUE)
X<-numeric(10)
X[1]<-1
for(t in 2:10){
X[t]<--X[t-1]+4
}
E<-numeric(10)
for(t in 1:10)
E[t]<-2
X<-ts(X)
X
plot(X)
lines(E,type='l',col="red",lty=3)
X<-numeric(100)
X[1]<-1
for(t in 2:100){
X[t]<--X[t-1]+4
}
E<-numeric(100)
for(t in 1:100)
E[t]<-2
X<-ts(X)
X
plot(X)
lines(E,type='l',col="red",lty=3)
Y<-numeric(10) #Solución de la ecuación de diferencias
for(t in 1:10){
Y[t]<-(-1)^t+2
}
E<-numeric(10)
for(t in 1:10)
E[t]<-2
Y<-ts(Y)
Y
plot(Y)
lines(E,type='l',col="red",lty=3)
X<-numeric(10)
X[1]<-1
for(t in 2:10){
X[t]<--4/5*X[t-1]+2
}
E<-numeric(10)
for(t in 1:10)
E[t]<-10/9
X<-ts(X)
X
plot(X)
lines(E,type='l',col="red",lty=3)
X<-numeric(100)
X[1]<-1
for(t in 2:100){
X[t]<--4/5*X[t-1]+2
}
E<-numeric(100)
for(t in 1:100)
E[t]<-10/9
X<-ts(X)
X
plot(X)
lines(E,type='l',col="red",lty=3)
Y<-numeric(10) #Solución de la ecuación de diferencias
for(t in 1:10){
Y[t]<-5/36*(-4/5)^t+10/9
}
E<-numeric(10)
for(t in 1:10)
E[t]<-10/9
Y<-ts(Y)
Y
plot(Y)
lines(E,type='l',col="red",lty=3)
X<-numeric(10)
X[1]<-2
for(t in 2:10){
X[t]<-1.1*X[t-1]+1
}
# E<-numeric(10)
# for(t in 1:10)
#   E[t]<-2
X<-ts(X)
X
plot(X)
# lines(E,type='l',col="red",lty=3)
X<-numeric(100)
X[1]<-2
for(t in 2:100){
X[t]<-1.1*X[t-1]+1
}
# E<-numeric(10)
# for(t in 1:10)
#   E[t]<-2
X<-ts(X)
X
plot(X)
# lines(E,type='l',col="red",lty=3)
Y<-numeric(10) #Solución de la ecuación de diferencias
for(t in 1:10){
Y[t]<-120/11*(1.1)^t-10
}
# E<-numeric(10)
# for(t in 1:10)
#   E[t]<-2
Y<-ts(Y)
Y
plot(Y)
# lines(E,type='l',col="red",lty=3)
X<-numeric(10)
X[1]<-0
X[2]<-2
for(t in 3:10){
X[t]<--7/3*X[t-1]-2/3*X[t-2]
}
E<-numeric(10)
for(t in 1:10)
E[t]<-0
X<-ts(X)
X
plot(X)
lines(E,type='l',col="red",lty=3)
X<-numeric(100)
X[1]<-0
X[2]<-2
for(t in 3:100){
X[t]<--7/3*X[t-1]-2/3*X[t-2]
}
E<-numeric(100)
for(t in 1:100)
E[t]<-0
X<-ts(X)
X
plot(X)
lines(E,type='l',col="red",lty=3)
Y<-numeric(10) #Solución de la ecuación de diferencias
for(t in 1:10){
Y[t]<-3/5*(-2)^t-18/5*(-1/3)^t
}
E<-numeric(10)
for(t in 1:10)
E[t]<-0
Y<-ts(Y)
Y
plot(Y)
lines(E,type='l',col="red",lty=3)
X<-numeric(10)
X[1]<-1
X[2]<-2
for(t in 3:10){
X[t]<-5/6*X[t-1]+1/6*X[t-2]+2
}
E<-numeric(10)
for(t in 1:10)
E[t]<-12/7*t
X<-ts(X)
X
plot(X)
lines(E,type='l',col="red",lty=3)
X<-numeric(100)
X[1]<-1
X[2]<-2
for(t in 3:100){
X[t]<-5/6*X[t-1]+1/6*X[t-2]+2
}
E<-numeric(100)
for(t in 1:100)
E[t]<-12/7*t
X<-ts(X)
X
plot(X)
lines(E,type='l',col="red",lty=3)
Y<-numeric(10) #Solución de la ecuación de diferencias
for(t in 1:10){
Y[t]<--180/49*(-1/6)^t-65/49*(1)^t+12/7*t
}
E<-numeric(10)
for(t in 1:10)
E[t]<-12/7*t
Y<-ts(Y)
Y
plot(Y)
lines(E,type='l',col="red",lty=3)
knitr::opts_chunk$set(echo = TRUE)
W<-rnorm(1000)
X<-numeric(1000)
# plot(W,type='l')
X[1]=2
for(t in 2:1000)
X[t]<-X[t-1]+W[t]
plot(X,type='l')
mean(X)
